head	1.3;
access;
symbols;
locks; strict;
comment	@// @;


1.3
date	97.05.03.17.06.11;	author markc;	state Exp;
branches;
next	1.2;

1.2
date	97.03.05.15.51.25;	author markc;	state Exp;
branches;
next	1.1;

1.1
date	95.11.08.16.57.38;	author chapman;	state Exp;
branches;
next	;


desc
@Initial check-in
@


1.3
log
@Use RBT instead of BST
@
text
@/*
 * Sample MTC++ program.
 *
 * Read strings from stdin and create unordered.dat and ordered.dat
 *
 * $Id: raofmake.cc,v 1.2 1997/03/05 15:51:25 markc Exp markc $
 *
 * $Log: raofmake.cc,v $
 * Revision 1.2  1997/03/05 15:51:25  markc
 * Added static char rcsid []  = "@@(#)$Id$";
 *
 * Revision 1.1  1995/11/08 16:57:38  chapman
 * Initial revision
 *
 *
 */

static char rcsid []  = "@@(#)$Id: raofmake.cc,v 1.2 1997/03/05 15:51:25 markc Exp markc $";

#include "../include/MTC++.h"
#include "../include/mstring.h"
#include "../include/errormsg.h"
#include "../include/rbt.h"
#include "../include/raof.h"

MTCwriteRAOF <MTCstring> *ordered;	// the sorted RAOF

void appendToOrdered(MTCstring *);

int main()
{
	MTCstring temp;
	MTCwriteRAOF <MTCstring> *unordered;

	// intro

	cout << "MTC++ raofmake utility." << endl;
	cout << "Copyright (c) 1995, Mark T. Chapman" << endl;

	// create ordered raof

	if ((ordered=new MTCwriteRAOF <MTCstring> ("ordered"))==NULL)
	{
		cerr << "Not Enough RAM" << endl;
		return -1;
	}

	ordered->setNeedEOL(TRUE);

	// create unordered raof

	if ((unordered=new MTCwriteRAOF <MTCstring> ("unordered"))==NULL)
	{
		cerr << "Not Enough RAM" << endl;
		return -1;
	}

	unordered->setNeedEOL(TRUE);

	// input loop

	cerr << "Reading Strings from STDIN..." << endl;

	cin >> temp;

	MTCRBT <MTCstring> sort;
	int i=0;

	while (cin.eof()==0)
	{
		sort.add(temp);

		unordered->append(temp);

		cin >> temp;
	} 

	cerr << "Closing UNORDERED raof..." << endl;

	if (unordered!=NULL)
	{
		delete unordered;
		unordered=NULL;
	}

	cerr << "Creating ORDERED raof..." << endl;

	sort.forEach(appendToOrdered);

	return 0;
}

// used by the forEach() method of a RBT

void appendToOrdered(MTCstring *aStringPtr)
{
	ordered->append(*aStringPtr);
}
@


1.2
log
@Added static char rcsid []  = "@@(#)$Id$";
@
text
@d6 1
a6 1
 * $Id: raofmake.cc,v 1.1 1995/11/08 16:57:38 chapman Exp markc $
d9 3
d18 1
a18 1
static char rcsid []  = "@@(#)$Id$";
d23 1
a23 1
#include "../include/bst.h"
d66 1
a66 1
	MTCBST <MTCstring> sort;
d93 1
a93 1
// used by the forEach() method of a BST
@


1.1
log
@Initial revision
@
text
@d6 5
a10 1
 * $Id$
a11 1
 * $Log$
d14 2
@
